#include <iostream>
#include <cstdlib>
#include <ctime>
#define N 10
using namespace std;
template <class Type>
void print_array(Type* arr, int size)
{
	for (int i = 0; i < size; i++)
	{
		std::cout << (double)arr[i] << '\t';
	}
	std::cout << '\n';
}
template <class Type>
void generate_array(Type* arr, int size)
{
	for (int i = 0; i < size; i++)
	{
		arr[i] = rand() % 20000 / 100.0 - 100;
	}
}
template <class Type>
void Shift(Type* el, int n)
{
	int i, flag = 0, counter = 0, indSort;
	Type forSort;
	for (; counter < n; counter++)
	{
		flag = 0;
		for (i = counter; i < n; i++) //находим первое отрицательное
		{
			if (el[i] < 0)
			{
				forSort = el[i];
				indSort = i;
				flag = 1;
				break;
			}
		} if (!flag) break;
		for (i = indSort + 1; i < n; i++)
		{
			if (el[i] < 0 && el[i] > forSort)
			{
				indSort = i;
				forSort = el[i];
			}
		}
		el[indSort] = el[counter];
		el[counter] = forSort;
	}
	for (; counter < n; counter++)
	{
		forSort = el[counter];
		indSort = counter;
		for (i = counter + 1; i < n; i++)
		{
			if (el[i] < forSort)
			{
				indSort = i;
				forSort = el[i];
			}
		}
		el[indSort] = el[counter];
		el[counter] = forSort;
	}
}
int main()
{
	system("cls");
	setlocale(LC_ALL, "Russian");
	srand(time(0));
	double first[N];
	char second[N];
	generate_array(first, N);
	generate_array(second, N);
	cout << "Исходный массив double:\n";
	print_array(first, N); cout << '\n';
	Shift(first, N);
	cout << "Отсортированный массив double:\n";
	print_array(first, N); cout << '\n';
	cout << "Исходный массив char:\n";
	print_array(second, N); cout << '\n';
	Shift(second, N);
	cout << "Отсортированный массив char:\n";
	print_array(second, N); cout << '\n';
}
