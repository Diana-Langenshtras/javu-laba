/*
Описать класс в соответствии с индивидуальным вариантом задания и реализовать все его
методы. Каждый класс должен содержать, помимо указанных в варианте методов, конструктор с
параметрами, конструктор копирования, деструктор, методы ввода с клавиатуры, установки и
получения значений полей, вывода этих значений на экран. В каждом методе класса, включая
конструкторы и деструктор, предусмотреть отладочную печать сообщения, содержащего имя
метода. Написать программу для тестирования всех методов класса, выбор метода должен
осуществляться с помощью меню.

Класс «Треугольник». Поля: длины двух сторон и величина угла между ними. Методы:
вычисление периметра, площади, высоты, проведенной из заданного угла, определение типа
(остроугольный, прямоугольный, тупоугольный), перегрузка операции сравнения на равенство
«==» двух треугольников.*/


#define _USE_MATH_DEFINES

#include <iostream>
#include <cmath>
#include <cstdio>


#include "stdlib.h"
#include "conio.h"
#include "windows.h"



using namespace std;

class triangle
{
	double a, b, angle;
public:
	double getA() { return a; } // геттер для a
	void setA(double a2) { a = a2; } // сеттер для a

	double getB() { return b; } // геттер для b
	void setB(double b2) { b = b2; } // сеттер для b

	double getAngle() { return angle; } // геттер для angle
	void setAngle(double angle2) { angle = angle2; } // сеттер для angle


	/* функция вычисления периметра */
	double perimeter()
	{
		system("CLS");
		cout << "Периметр равен ";
		cout << a + b + c() << endl;
		system("pause");
		return a + b + c();
	}

	/* функция вычисления площади */
	double area()
	{
		system("CLS");
		cout << "Площадь равна ";
		cout << a * b * sin(angle * M_PI / 180) / 2 << endl;
		system("pause");
		return a * b * sin(angle * M_PI / 180) / 2;
	}

	/* функция вычисления высоты */
	double height()
	{
		system("CLS");
		cout << "Высота равна ";
		cout << a * b * sin(angle * M_PI / 180) / c() << endl;
		system("pause");
		return a * b * sin(angle * M_PI / 180) / c();
	}

	/* функция ввода значений двух сторон и угла */
	void input()
	{
		double a1, b1, angle1;
		system("CLS");
		cout << "Введите значение первой стороны" << endl;
		do cin >> a1; while (a1 <= 0);
		setA(a1);
		cout << "Введите значение второй стороны" << endl;
		do cin >> b1; while (b1 <= 0);
		setB(b1);
		cout << "Введите значение угла между сторонами (в градусах)" << endl;
		do cin >> angle1; while (angle1 <= 0);
		setAngle(angle1);
		cout << "Значение третьей стороны равно ";
		cout << c() << endl;
		system("pause");
	}

	/* функция вывода значения трех сторон и угла */
	void output()
	{
		system("CLS");
		cout << "Значение первой стороны: ";
		cout << getA() << endl;
		cout << "Значение второй стороны: ";
		cout << getB() << endl;
		cout << "Значение третьей стороны: ";
		cout << c() << endl;
		cout << "Значение угла между первой и второй сторонами (в градусах): ";
		cout << getAngle() << endl;
		system("pause");
	}

	/* функция определения типа треугольника */
	int type()
	{
		system("CLS");
		cout << "Треугольник ";
		if ((a * a == b * b + c() * c()) || (b * b == a * a + c() * c()) || (c() * c() == b * b + a * a))
			cout << "прямоугольный" << endl;
		else
			if ((a * a > b * b + c() * c()) || (b * b > a * a + c() * c()) || (c() * c() > b * b + a * a))
				cout << "тупоугольный" << endl;
			else
				cout << "остроугольный" << endl;
		system("pause");
		return 0;
	}

	/* функция вычисления третьей стороны */
	double c()
	{
		return sqrt(a * a + b * b - 2 * a * b * cos(angle * M_PI / 180));
	}

	/*конструктор с параметрами*/
	triangle(double A = 3, double B = 4, double AA = 90) : a(A), b(B), angle(AA) { cout << "Значения по умолчанию установлены"; }

	/*конструктор копирования*/
	triangle(const triangle& t) :
		a(t.a), b(t.b), angle(t.angle)
	{
		cout << "Копирования успешно произошло" << endl << endl;
	}

	/*деструктор*/
	~triangle() { cout << "Деструктор сработал"; }

	/*перегрузка оператора сравнения на равенство 2х треугольников*/
	bool operator== (triangle& t)
	{
		if (
			((a == t.a) && ((b == t.b && c() == t.c()) || (c() == t.b && b == t.c()))) ||
			((b == t.b) && ((a == t.a && c() == t.c()) || (c() == t.a && a == t.c()))) ||
			((c() == t.c()) && ((b == t.b && a == t.a) || (a == t.b && b == t.a)))
			)
		{
			cout << "Треугольники равны" << endl; system("pause"); return true;
		}
		else { cout << "Треугольники не равны" << endl << endl; system("pause"); return false; }
	}

};

int main()
{
	setlocale(LC_ALL, "Russian");
	triangle t;
	cout << endl << endl;
	system("pause");
	int menu;
	do
	{
		system("CLS");
		cout << "1. Ввести значения сторон и угла между ними" << endl;
		cout << "2. Вывести значения сторон и угла (в градусах) между ними" << endl;
		cout << "3. Найти периметр" << endl;
		cout << "4. Найти площадь" << endl;
		cout << "5. Найти высоту" << endl;
		cout << "6. Определить тип треугольника" << endl;
		cout << "7. Протестировать конструктор копирования" << endl;
		cout << "8. Сравнить два треугольника" << endl;
		cout << "9. Выход" << endl;
		cin >> menu;
		switch (menu)
		{
		case 1: t.input(); break;
		case 2: t.output(); break;
		case 3: t.perimeter(); break;
		case 4: t.area(); break;
		case 5: t.height(); break;
		case 6: t.type(); break;
		case 7:
		{
			triangle tcopy(t);
			system("pause");
			tcopy.output();
		} break;
		case 8:
		{
			triangle t2;
			cout << " для второго треугольника" << endl;
			cout << endl << "Введите значения для второго треугольника :" << endl << endl;
			system("pause");
			t2.input();
			cout << endl;
			t == t2;
		} break;
		}
	} while (menu != 9);
	return 0;
}


